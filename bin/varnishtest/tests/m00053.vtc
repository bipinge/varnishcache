varnishtest "VCL_SUB_DYNAMIC type basics"

varnish v1 -vcl {
	import std;
	import debug;

	backend dummy None;

	sub foo {
		set resp.http.it = "works";
	}
	sub bar {
		set beresp.http.it = "works";
	}
	sub indirect {
		debug.call_dynamic(foo);
	}
	sub direct {
		call foo;
	}
	sub recursive {
		debug.call_dynamic(recursive);
	}
	sub recursive_indirect {
		debug.call_dynamic(recursive_indirect);
	}
	sub rollback {
		std.rollback(req);
	}

	sub vcl_recv {
		if (req.url == "/wrong") {
			debug.call_dynamic(foo);
		}
		if (req.url == "/recursive") {
			debug.call_dynamic(recursive);
		}
		if (req.url == "/recursive_indirect") {
			call recursive_indirect;
		}
		return (synth(200));
	}
	sub vcl_synth {
		if (req.url == "/foo") {
			debug.call_dynamic(foo);
		} else if (req.url == "/direct") {
			debug.call_dynamic(direct);
		} else if (req.url == "/indirect") {
			debug.call_dynamic(indirect);
		} else if (req.url == "/rollback") {
			debug.call_dynamic(rollback);
		} else if (req.url == "/callthenrollback") {
			debug.call_dynamic(foo);
			call rollback;
			if (! resp.http.it) {
				set resp.http.rolledback = true;
			}
			debug.call_dynamic(foo);
		} else if (req.url == "/checkwrong") {
			synthetic(debug.check_call(bar));
			set resp.status = 500;
		}
		return (deliver);
	}
} -start

client c1 {
	txreq -url "/foo"
	rxresp
	expect resp.status == 200
	expect resp.http.it == "works"

	txreq -url "/direct"
	rxresp
	expect resp.status == 200
	expect resp.http.it == "works"

	txreq -url "/indirect"
	rxresp
	expect resp.status == 200
	expect resp.http.it == "works"

	txreq -url "/callthenrollback"
	rxresp
	expect resp.status == 200
	expect resp.http.rolledback == "true"
	expect resp.http.it == "works"

	txreq -url "/wrong"
	rxresp
	expect resp.status == 503
} -start
client c2 {
	txreq -url "/recursive"
	rxresp
	expect resp.status == 503
} -start
client c3 {
	txreq -url "/recursive_indirect"
	rxresp
	expect resp.status == 503
} -start
client c4 {
	txreq -url "/rollback"
	rxresp
	expect resp.status == 200
} -start
client c5 {
	txreq -url "/checkwrong"
	rxresp
	expect resp.status == 500
	expect resp.body == {Dynamic call to "sub bar{}" not allowed from here}
} -start

varnish v1 -errvcl {Impossible Subroutine('<vcl.inline>' Line 8 Pos 13)} {
	import std;
	import debug;

	backend dummy None;

	sub impossible {
		set req.http.impossible = beresp.reason;
	}
	sub vcl_recv {
		if (req.url == "/impossible") {
			debug.call_dynamic(impossible);
		}
	}
}

client c1 -wait
client c2 -wait
client c3 -wait
client c4 -wait
client c5 -wait
