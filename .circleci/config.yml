version: 2.1

aliases:
  activate_qemu: &activate_qemu
    run:
      name: Activate QEMU
      command: |
        sudo docker run --rm --privileged multiarch/qemu-user-static:register --reset --credential yes
  pkg_req: &pkg_req
    requires:
      - dist
      - tar_pkg_tools
  package_job: &package_job
    parameters:
      dist:
        description: the Linux distribution (debian|ubuntu|centos)
        type: string
      release:
        description: the release name (stretch|buster|xenial|bionic|7|8)
        type: string
      ext:
        description: the package extension (deb|rpm|apk)
        type: string
      arch:
        description: the architecture (x64|aarch64)
        type: string
      image:
        description: the base Docker image for Dockerfile
        type: string
      workspace_extra:
        description: extra paths for the workspace root
        type: string
        default: ""
    machine: true
    steps:
      - attach_workspace:
          at: ~/workspace
      - run: ls -laR ~/workspace
      - checkout
      - <<: *activate_qemu
      - run:
          name: Create Dockerfile
          command: |
            echo "FROM << parameters.image >>" > Dockerfile
            echo "ADD make-<< parameters.ext >>-packages.sh /usr/bin/" >> Dockerfile
            echo 'CMD ["make-<< parameters.ext >>-packages.sh"]' >> Dockerfile
      - run:
          name: Build << parameters.dist >> << parameters.release >> << parameters.arch >> << parameters.ext >>
          command: |
            mkdir /tmp/packages
            cp .circleci/make-<< parameters.ext >>-packages.sh .
            docker build -t varnish-<< parameters.ext >>-package-build:<< parameters.arch >> .
            docker run --rm -it -e PARAM_DIST=<< parameters.dist >> -e PARAM_RELEASE=<< parameters.release >> -v$(pwd):/varnish-cache -v$HOME/workspace:/workspace -v/tmp/packages:/packages varnish-<< parameters.ext >>-package-build:<< parameters.arch >>
      - run:
          name: List created packages
          command: find ./ -name "*.<< parameters.ext >>"
      - persist_to_workspace:
          root: /tmp
          paths:
            - "packages"
      - store_artifacts:
          path: ~/project/packages


parameters:
  vc-commit:
    type: string
    default: "HEAD"
  pkg-commit:
    type: string
    default: "master"
jobs:
  dist:
    description: Builds varnish-x.y.z.tar.gz that is used later for the packaging jobs
    docker:
      - image: centos:7
    steps:
      - run:
          name: Install deps
          command: |
            yum install -y epel-release
            yum install -y \
                automake \
                jemalloc-devel \
                git \
                libedit-devel \
                libtool \
                libunwind-devel \
                make \
                pcre-devel \
                python3 \
                python-sphinx
      - checkout
      - run:
          name: Create the dist tarball
          command: |
            git checkout << pipeline.parameters.vc-commit >>
            # if version is "trunk", it's a weekly tarball, override the version
            if grep 'AC_INIT.*trunk.*' ./configure.ac; then
                sed -i -e "s/^AC_INIT.*trunk.*/AC_INIT([Varnish], [$(date +%Y%m%d)], [varnish-dev@varnish-cache.org])/" ./configure.ac
                touch .is_weekly
            fi
            ./autogen.des --quiet
            make dist -j 16
            mkdir -p ~/workspace/tools
            mv varnish-*tar.gz ~/workspace/
            if test -e .is_weekly; then mv .is_weekly ~/workspace/; fi
            mv tools/*.suppr ~/workspace/tools/
      - persist_to_workspace:
          root: ~/workspace
          paths:
            - .is_weekly
            - varnish*.tar.gz
            - tools/*.suppr
      - store_artifacts:
          destination: ~/workspace
          path: ~/workspace
  tar_pkg_tools:
    description: Builds archives with the packaging tools from https://github.com/varnishcache/pkg-varnish-cache
    docker:
      - image: centos:7
    steps:
      - add_ssh_keys:
          fingerprints:
            - "11:ed:57:75:32:81:9d:d0:a4:5e:af:15:4b:d8:74:27"
      - run:
          name: Grab the pkg repo
          command: |
            yum install -y git
            mkdir -p ~/.ssh
            ssh-keyscan -H github.com >> ~/.ssh/known_hosts
            echo ${CIRCLE_REPOSITORY_URL}
            git clone https://github.com/varnishcache/pkg-varnish-cache.git .
            git checkout << pipeline.parameters.pkg-commit >>
            tar cvzf debian.tar.gz debian --dereference
            tar cvzf redhat.tar.gz redhat --dereference
            tar cvzf alpine.tar.gz alpine --dereference
            mkdir -p ~/workspace
            mv *.tar.gz ~/workspace
      - persist_to_workspace:
          root: ~/workspace
          paths:
            - debian.tar.gz
            - redhat.tar.gz
            - alpine.tar.gz
      - store_artifacts:
          destination: ~/workspace
          path: ~/workspace
  x64-centos-7:
    <<: *package_job
  aarch64-centos-7:
    <<: *package_job
  x64-centos-8:
    <<: *package_job
  aarch64-centos-8:
    <<: *package_job
  x64-ubuntu-bionic:
    <<: *package_job
  aarch64-ubuntu-bionic:
    <<: *package_job
  x64-ubuntu-xenial:
    <<: *package_job
  aarch64-ubuntu-xenial:
    <<: *package_job
  aarch64-debian-bullseye:
    <<: *package_job
  x64-debian-bullseye:
    <<: *package_job
  x64-debian-buster:
    <<: *package_job
  aarch64-debian-buster:
    <<: *package_job
  x64-debian-stretch:
    <<: *package_job
  aarch64-debian-stretch:
    <<: *package_job
  x64-alpine-3:
    <<: *package_job
  aarch64-alpine-3:
    <<: *package_job
  distcheck:
    parameters:
      dist:
        description: the Linux distribution (debian|ubuntu)
        type: string
      release:
        description: the release name (stretch|buster|xenial|bionic)
        type: string
      extra_conf:
        description: platform-specific configure arguments
        default: ""
        type: string
    docker:
      - image: << parameters.dist >>:<< parameters.release >>
    working_directory: /workspace
    steps:
      - run:
          name: List the contents of ~/workspace
          command: if [ -e ~/workspace ]; then ls -laR ~/workspace/; fi
      - run:
          name: Possibly activate centos:8 extra repos
          command: |
            if [ << parameters.dist >> = centos ]; then
                if [ << parameters.release >> = 8 ]; then
                    dnf install -y 'dnf-command(config-manager)'
                    yum config-manager --set-enabled PowerTools
                    yum install -y diffutils python3-sphinx
                else
                    yum install -y python-sphinx
                fi
                yum install -y epel-release
                yum install -y \
                    automake \
                    jemalloc-devel \
                    libedit-devel \
                    libtool \
                    libunwind-devel \
                    make \
                    pcre-devel \
                    python3 \
                    sudo
            elif [ << parameters.dist >> = debian -o << parameters.dist >> = ubuntu ]; then
                export DEBIAN_FRONTEND=noninteractive
                export DEBCONF_NONINTERACTIVE_SEEN=true
                apt-get update
                apt-get install -y \
                    autoconf \
                    automake \
                    build-essential \
                    ca-certificates \
                    graphviz \
                    libedit-dev \
                    libjemalloc-dev \
                    libncurses-dev \
                    libpcre3-dev \
                    libtool \
                    libunwind-dev \
                    pkg-config \
                    python3-sphinx \
                    sudo
            elif [ << parameters.dist >> = alpine ]; then
                apk update
                apk add -q \
                    autoconf \
                    automake \
                    build-base \
                    ca-certificates \
                    gzip \
                    libedit-dev \
                    libtool \
                    libunwind-dev \
                    linux-headers \
                    pcre-dev \
                    py-docutils \
                    py3-sphinx \
                    tar \
                    sudo
            fi
      - attach_workspace:
          at: /workspace
      - run:
          name: Extract and distcheck
          command: |
            tar xavf /workspace/*.tar.gz --strip 1
            if [ << parameters.dist >> = centos ]; then
            	adduser varnish
            else
            	adduser --disabled-password --gecos "" varnish
            fi
            chown -R varnish:varnish /workspace

            export ASAN_OPTIONS=abort_on_error=1,detect_odr_violation=1,detect_leaks=1,detect_stack_use_after_return=1,detect_invalid_pointer_pairs=1,handle_segv=0,handle_sigbus=0,use_sigaltstack=0,disable_coredump=0
            export LSAN_OPTIONS=abort_on_error=1,use_sigaltstack=0,suppressions=$(pwd)/tools/lsan.suppr
            export TSAN_OPTIONS=abort_on_error=1,halt_on_error=1,use_sigaltstack=0,suppressions=$(pwd)/tools/tsan.suppr
            export UBSAN_OPTIONS=halt_on_error=1,print_stacktrace=1,use_sigaltstack=0,suppressions=$(pwd)/tools/ubsan.suppr

            sudo -u varnish ./configure \
            	--quiet \
            	--with-unwind \
            	--enable-developer-warnings \
            	--enable-debugging-symbols \
            	--disable-stack-protector \
            	--with-persistent-storage \
            	<< parameters.extra_conf >>
            sudo -u varnish \
            	--preserve-env=ASAN_OPTIONS,LSAN_OPTIONS,TSAN_OPTIONS,UBSAN_OPTIONS \
            	make distcheck VERBOSE=1 -j 12 -k

  collect_packages:
    docker:
      - image: centos:7
    steps:
      - attach_workspace:
          at: ~/workspace
      - run: ls -laR ~/workspace/
      - run:
          name: Tar the packages
          command: |
              tar cvzf packages.tar.gz ~/workspace/packages
      - store_artifacts:
          destination: packages.tar.gz
          path: packages.tar.gz


workflows:
  version: 2
  build:
    jobs:
      - dist
      - tar_pkg_tools
      - aarch64-ubuntu-bionic:
          dist: ubuntu
          release: bionic
          arch: aarch64
          image: multiarch/ubuntu-core:arm64-bionic
          ext: deb
          <<: *pkg_req
      - x64-ubuntu-bionic:
          dist: ubuntu
          release: bionic
          arch: x64
          image: ubuntu:bionic
          ext: deb
          <<: *pkg_req
      - aarch64-ubuntu-xenial:
          dist: ubuntu
          release: xenial
          arch: aarch64
          image: multiarch/ubuntu-core:arm64-xenial
          ext: deb
          <<: *pkg_req
      - x64-ubuntu-xenial:
          dist: ubuntu
          release: xenial
          arch: x64
          image: ubuntu:xenial
          ext: deb
          <<: *pkg_req
      - aarch64-debian-bullseye:
          dist: debian
          release: bullseye
          arch: aarch64
          image: multiarch/debian-debootstrap:arm64-bullseye-slim
          ext: deb
          <<: *pkg_req
      - x64-debian-bullseye:
          dist: debian
          release: bullseye
          arch: x64
          image: debian:bullseye
          ext: deb
          <<: *pkg_req
      - aarch64-debian-buster:
          dist: debian
          release: buster
          arch: aarch64
          image: multiarch/debian-debootstrap:arm64-buster-slim
          ext: deb
          <<: *pkg_req
      - x64-debian-buster:
          dist: debian
          release: buster
          arch: x64
          image: debian:buster
          ext: deb
          <<: *pkg_req
      - aarch64-debian-stretch:
          dist: debian
          release: stretch
          arch: aarch64
          image: multiarch/debian-debootstrap:arm64-stretch-slim
          ext: deb
          <<: *pkg_req
      - x64-debian-stretch:
          dist: debian
          release: stretch
          arch: x64
          image: debian:stretch
          ext: deb
          <<: *pkg_req
      - aarch64-centos-7:
          dist: centos
          release: "7"
          arch: aarch64
          image: multiarch/centos:7-aarch64-clean
          ext: rpm
          <<: *pkg_req
      - x64-centos-7:
          dist: centos
          release: "7"
          arch: x64
          image: centos:7
          ext: rpm
          <<: *pkg_req
# there is no multiarch image for aarch64
#      - aarch64-centos-8:
#          dist: centos
#          release: "8"
#          arch: aarch64
#          image:
#          ext: rpm
#          <<: *pkg_req
      - x64-centos-8:
          dist: centos
          release: "8"
          arch: x64
          image: centos:8
          ext: rpm
          <<: *pkg_req
      - x64-alpine-3:
          dist: alpine
          release: "3"
          arch: x64
          image: alpine:3
          ext: apk
          workspace_extra: "/x86_64"
          <<: *pkg_req
      - aarch64-alpine-3:
          dist: alpine
          release: "3"
          arch: aarch64
          image: multiarch/alpine:aarch64-edge
          ext: apk
          workspace_extra: "/aarch64"
          <<: *pkg_req
      - collect_packages:
          requires:
            - x64-ubuntu-xenial
            - x64-ubuntu-bionic
            - aarch64-ubuntu-xenial
            - aarch64-ubuntu-bionic
            - x64-debian-bullseye
            - aarch64-debian-bullseye
            - x64-debian-buster
            - aarch64-debian-buster
            - x64-debian-stretch
            - aarch64-debian-stretch
            - x64-centos-7
            - x64-centos-8
            - aarch64-centos-7
#            - aarch64-centos-8
            - x64-alpine-3
            - aarch64-alpine-3
      - distcheck:
          name: distcheck_centos_7
          dist: centos
          release: "7"
          requires:
            - dist
      - distcheck:
          name: distcheck_centos_8
          dist: centos
          release: "8"
          requires:
            - dist
      - distcheck:
          name: distcheck_debian_buster
          dist: debian
          release: buster
          extra_conf: --enable-asan --enable-ubsan
          requires:
            - dist
      - distcheck:
          name: distcheck_alpine
          dist: alpine
          release: "latest"
          #extra_conf: --without-jemalloc
          requires:
            - dist
