varnishtest "Test vcl purging"

server s1 {
	rxreq
	txresp -body "foo"

	rxreq
	txresp -body "foo"
} -start

varnish v1 -vcl+backend {
	import std;
	sub vcl_recv {
		if (req.method == "PURGE") {
			std.ban("");
			std.ban("req.url");
			std.ban("req.url //");
			std.ban("req.url // bar");
			std.ban("req.url == bar //");
			std.ban("foo == bar //");
			std.ban("req.url ~ ^/$");
			return (synth(209,"foo"));
		}
	}

} -start

client c1 {
	txreq
	rxresp
	expect resp.http.X-Varnish == "1001"
} -run

logexpect l1 -v v1 -d 1 -g vxid {
	expect * 1004	VCL_Error {ban[(][)]: No ban conditions found[.]}
	expect * 1004	VCL_Error {ban[(][)]: Expected comparison operator[.]}
	expect * 1004	VCL_Error {ban[(][)]: Expected second operand[.]}
	expect * 1004	VCL_Error {ban[(][)]: expected conditional [(]~, !~, == or !=[)] got "//"}
	expect * 1004	VCL_Error {ban[(][)]: Expected && between conditions, found .//.}
	expect * 1004	VCL_Error {ban[(][)]: Unknown or unsupported field .foo.}

} -start

client c1 {
	txreq -req "PURGE"
	rxresp
	expect resp.http.X-Varnish == "1004"
	expect resp.status == 209
} -run

logexpect l1 -wait

client c1 {
	txreq
	rxresp
	expect resp.http.X-Varnish == "1006"
} -run
