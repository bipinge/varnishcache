varnishtest "client h1 send timeouts - tcp"

# XXX See https://github.com/varnishcache/varnish-cache/pull/2980#issuecomment-486214661
feature cmd {test $(uname) != "SunOS" && test $(uname) != "Darwin"}

feature SO_RCVTIMEO_WORKS

barrier b1 cond 2 -cyclic
barrier b2 cond 2 -cyclic

server s1 -repeat 2 {
	fatal
	rxreq
	txresp -nolen -hdr "Transfer-encoding: chunked"
	chunkedlen 100000
	# make sure varnish is stuck in delivery
	barrier b1 sync
	non_fatal
	chunkedlen 0
} -start

varnish v1 -cliok "param.set debug +syncvsl"
varnish v1 -cliok "param.set debug +flush_head"
varnish v1 -cliok "param.set thread_pools 1"
varnish v1 -cliok "param.set timeout_idle 1"
varnish v1 -cliok "param.set idle_send_timeout .1"
varnish v1 -cliok "param.set send_timeout .1"

varnish v1 -vcl+backend {
	import debug;
	sub vcl_recv { return (pass); }
	sub vcl_deliver { debug.sndbuf(256b); }
} -start

logexpect l1 -v v1 -g raw {
	expect * 1001 Debug	"Hit total send timeout"
	expect * 1000 SessClose	TX_ERROR
} -start

client c1 -rcvbuf 256 {
	txreq
	rxresphdrs
	# varnish is stuck sending the chunk
	barrier b1 sync
	# wait for the timeout to kick in
	barrier b2 sync
} -start

logexpect l1 -wait
barrier b2 sync
client c1 -wait

varnish v1 -cliok "param.reset send_timeout"

logexpect l2 -v v1 -g raw {
	expect * 1004 Debug "Hit idle send timeout"
} -start

client c1 -start
logexpect l2 -wait
barrier b2 sync
client c1 -wait
